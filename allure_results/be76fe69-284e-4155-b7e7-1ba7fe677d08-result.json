{"name": "test_add_group[None: 'NameU]v^!7\\\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<']", "status": "failed", "statusDetails": {"message": "AssertionError: assert [5: 'NameI'; ...:N:jYOI', ...] == [5: 'NameI'; '...:N:jYOI', ...]\n  At index 72 diff: None: 'NameU]v^!7\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<' != 91: 'NameU]v^!7w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<'\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x00000197E40FB828>\ndb = <fixture.orm.ORMFixture object at 0x00000197E41256A0>\njson_groups = None: 'NameU]v^!7\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<'\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with pytest.allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [5: 'NameI'; ...:N:jYOI', ...] == [5: 'NameI'; '...:N:jYOI', ...]\nE             At index 72 diff: None: 'NameU]v^!7\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<' != 91: 'NameU]v^!7w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<'\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1504197914407, "stop": 1504197914414}, {"name": "When I add a group None: 'NameU]v^!7\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<' to the list", "status": "passed", "start": 1504197914415, "stop": 1504197916181}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "start": 1504197916182, "stop": 1504197916191}], "parameters": [{"name": "json_groups", "value": "None: 'NameU]v^!7\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<'"}], "start": 1504197914407, "stop": 1504197916192, "uuid": "2906c5ad-26b5-479f-90d0-1dd8e7502c4c", "historyId": "b1e1b01bfb0930c4b7b7ef45931af6c5", "fullName": "test/test_add_group#test_add_group[None: 'NameU]v^!7\\\\w3'; 'HeaderG&{5E 0'; 'Footer*/k5!LE;_c?D9!%<']", "labels": [{"name": "package", "value": "test/test_add_group"}]}