{"name": "test_add_group[None: 'Name l;\\\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\\\p|z/`']", "status": "failed", "statusDetails": {"message": "AssertionError: assert [5: 'NameI'; ...:N:jYOI', ...] == [5: 'NameI'; '...:N:jYOI', ...]\n  At index 71 diff: None: 'Name l;\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\p|z/`' != 90: 'Name l;s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA p|z/`'\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x00000197E40FB828>\ndb = <fixture.orm.ORMFixture object at 0x00000197E41256A0>\njson_groups = None: 'Name l;\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\p|z/`'\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add a group %s to the list\" % group):\n            app.group.create(group)\n        with pytest.allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [5: 'NameI'; ...:N:jYOI', ...] == [5: 'NameI'; '...:N:jYOI', ...]\nE             At index 71 diff: None: 'Name l;\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\p|z/`' != 90: 'Name l;s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA p|z/`'\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError"}, "steps": [{"name": "Given a group list", "status": "passed", "start": 1504197912166, "stop": 1504197912174}, {"name": "When I add a group None: 'Name l;\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\p|z/`' to the list", "status": "passed", "start": 1504197912174, "stop": 1504197914201}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "start": 1504197914201, "stop": 1504197914210}], "parameters": [{"name": "json_groups", "value": "None: 'Name l;\\s'; 'Header IB8 ::dDyJ4hEcI'; 'Footer !ok7nlA \\p|z/`'"}], "start": 1504197912165, "stop": 1504197914211, "uuid": "2556c516-b78a-4fb6-9d1d-b4c102b2672c", "historyId": "37f03e6913e72a25a583b936eed8160d", "fullName": "test/test_add_group.test_add_group[None: 'Name l;\\\\s'; 'Header IB8 #dDyJ4hEcI'; 'Footer !ok7nlA \\\\p|z/`']", "labels": [{"name": "package", "value": "test/test_add_group"}]}